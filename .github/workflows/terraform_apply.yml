name: "Terraform Apply"

# Trigger the workflow on push to the main branch
on:
  push:
    branches:
      - main

env:
  # verbosity setting for Terraform logs
  TF_LOG: INFO
  # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform_apply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v4

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.0

      - name: Terraform Init
        id: init
        run: terraform init -input=false

      - name: Terraform Plan
        id: plan
        continue-on-error: true
        run: terraform plan -input=false -no-color -out=tfplan && terraform show -no-color tfplan

      # - name: Reformat Plan
      #   if: steps.plan.outcome == 'success'
      #   run: |
      #     echo '${{ steps.plan.outputs.stdout || steps.plan.outputs.stderr }}' \
      #     | sed -E 's/^([[:space:]]+)([-+])/\2\1/g' > plan.txt

      # - name: Put Plan in Env Var
      #   if: steps.plan.outcome == 'success'
      #   run: |
      #     PLAN=$(cat plan.txt)
      #     echo "PLAN<<EOF" >> $GITHUB_ENV
      #     echo "$PLAN" >> $GITHUB_ENV
      #     echo "EOF" >> $GITHUB_ENV

      - name: Terraform Apply
        id: apply
        continue-on-error: true
        if: steps.plan.outcome == 'success'
        run: terraform apply -auto-approve -input=false -no-color

      - name: Post Plan and Apply to GitHub PR
        if: steps.plan.outcome == 'success' && steps.apply.outcome == 'success'
        uses: actions/github-script@v7
        env:
          APPLY: ${{ steps.apply.outputs.stdout }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Apply üöÄ\`${{ steps.apply.outcome }}\`

            <details><summary>Show Apply</summary>

            \`\`\`${process.env.APPLY}\`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Post Plan Failure
        if: steps.plan.outcome == 'failure'
        uses: actions/github-script@v7
        env:
          PLAN_FAIL: ${{ steps.plan.outputs.stderr }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan Error</summary>

            \`\`\`${process.env.PLAN_FAIL}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Post Apply Failure
        if: steps.apply.outcome == 'failure'
        uses: actions/github-script@v7
        env:
          APPLY_FAIL: ${{ steps.apply.outputs.stderr }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Apply üöÄ\`${{ steps.apply.outcome }}\`

            <details><summary>Show Apply Error</summary>

            \`\`\`${process.env.APPLY_FAIL}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
